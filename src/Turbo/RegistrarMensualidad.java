/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Turbo;

import Finca.*;
import InicioPrincipal.ColorFondo;
import static Turbo.RegistrarRecibo.fecha;
import static Turbo.RegistrarRecibo.getDaysBetweenDates;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.Printable;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.Doc;
import javax.print.DocFlavor;
import javax.print.DocPrintJob;
import javax.print.PrintException;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.print.SimpleDoc;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.Copies;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author User
 */
public class RegistrarMensualidad extends javax.swing.JFrame implements Runnable {
    String user = Conexion.user;
    String clave = Conexion.clave;
    String url = Conexion.urlTurbo;
    Connection con;
    Statement stmt;
    ResultSet rs;
    String datos[] = new String [9]; 
    DefaultTableModel modelo = new DefaultTableModel();
    DecimalFormat formatea = new DecimalFormat("###,###.##");
    Thread h1;
    int totalPagar;
    String nFactura = "";
    String documento, nombre, celular;
    LocalDate result;
    int valorMes = 0, valorQuincena = 0;

    /**
     * Creates new form Inicio
     */
    public RegistrarMensualidad() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle(Conexion.nombreNegocio+": registrar mensualidad");
        try {
                Class.forName("com.mysql.cj.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RegistrarMensualidad.class.getName()).log(Level.SEVERE, null, ex);
            }
        verificarVencimiento();
        
        modelo.addColumn("ID");
        modelo.addColumn("DOCUMENTO");
        modelo.addColumn("NOMBRE");
        modelo.addColumn("CELULAR");
        modelo.addColumn("PLACA");
        modelo.addColumn("FECHA INGRESO");
        modelo.addColumn("FECHA VENCIMIENTO");
        modelo.addColumn("TIPO PAGO");
        modelo.addColumn("ACTIVO");
        
        h1 = new Thread(this);
        h1.start();
        
        jLabelFecha.setText(fecha());
        jLabelHora.setText(horaActual());
        cargarMotos();
        jTextFieldPlaca.requestFocus();
        
        
            
       
    }
    public Image getIconImage(){
       Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("imagenes1/icono.png"));
       return retValue;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBoxUnidad = new javax.swing.JComboBox<>();
        jLabelPrecio5 = new javax.swing.JLabel();
        jLabelFecha = new javax.swing.JLabel();
        jLabelHora = new javax.swing.JLabel();
        jLabelPrecio3 = new javax.swing.JLabel();
        jLabelPrecio4 = new javax.swing.JLabel();
        jTextFieldPlaca = new javax.swing.JTextField();
        jLabelId = new javax.swing.JLabel();
        MostrarCodigo1 = new javax.swing.JLabel();
        jScrollPaneProducto = new javax.swing.JScrollPane();
        TablaDatos = new javax.swing.JTable();
        jButtonListo = new javax.swing.JButton();
        jButtonCancelar1 = new javax.swing.JButton();
        jLabelPrecio2 = new javax.swing.JLabel();
        jButtonAtras1 = new javax.swing.JButton();
        jButtonInicio = new javax.swing.JButton();
        jLabelLogo = new javax.swing.JLabel();
        jLabelFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBoxUnidad.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jComboBoxUnidad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "quincena", "mes" }));
        getContentPane().add(jComboBoxUnidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 240, 40));

        jLabelPrecio5.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabelPrecio5.setForeground(new java.awt.Color(51, 51, 51));
        jLabelPrecio5.setText("TIPO PAGO:");
        getContentPane().add(jLabelPrecio5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 150, -1));

        jLabelFecha.setBackground(new java.awt.Color(102, 255, 102));
        jLabelFecha.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabelFecha.setOpaque(true);
        getContentPane().add(jLabelFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, 250, 30));

        jLabelHora.setBackground(new java.awt.Color(102, 255, 102));
        jLabelHora.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabelHora.setOpaque(true);
        getContentPane().add(jLabelHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 60, 250, 30));

        jLabelPrecio3.setFont(new java.awt.Font("SansSerif", 0, 36)); // NOI18N
        jLabelPrecio3.setForeground(new java.awt.Color(51, 51, 51));
        jLabelPrecio3.setText("PLACA:");
        getContentPane().add(jLabelPrecio3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 130, -1));

        jLabelPrecio4.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabelPrecio4.setForeground(new java.awt.Color(51, 51, 51));
        jLabelPrecio4.setText("HORA:");
        getContentPane().add(jLabelPrecio4, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, 90, -1));

        jTextFieldPlaca.setBackground(new java.awt.Color(255, 255, 0));
        jTextFieldPlaca.setFont(new java.awt.Font("SansSerif", 0, 36)); // NOI18N
        jTextFieldPlaca.setForeground(new java.awt.Color(0, 0, 0));
        jTextFieldPlaca.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldPlaca.setSelectedTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldPlaca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPlacaActionPerformed(evt);
            }
        });
        jTextFieldPlaca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPlacaKeyTyped(evt);
            }
        });
        getContentPane().add(jTextFieldPlaca, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 50, 180, 60));

        jLabelId.setBackground(new java.awt.Color(102, 255, 102));
        jLabelId.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabelId.setOpaque(true);
        getContentPane().add(jLabelId, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 100, 30));

        MostrarCodigo1.setBackground(new java.awt.Color(0, 0, 0));
        MostrarCodigo1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        MostrarCodigo1.setForeground(new java.awt.Color(51, 51, 51));
        MostrarCodigo1.setText("ID:");
        getContentPane().add(MostrarCodigo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 10, 40, 30));

        TablaDatos = new javax.swing.JTable(){
            public boolean isCellEditable(int riwIndex, int colIndex){
                return false;
            }
        };
        TablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        TablaDatos.getTableHeader().setReorderingAllowed(false);
        TablaDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaDatosMouseClicked(evt);
            }
        });
        jScrollPaneProducto.setViewportView(TablaDatos);

        getContentPane().add(jScrollPaneProducto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 650, 350));

        jButtonListo.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jButtonListo.setForeground(new java.awt.Color(51, 51, 51));
        jButtonListo.setText("IMPRIMIR");
        jButtonListo.setBorderPainted(false);
        jButtonListo.setContentAreaFilled(false);
        jButtonListo.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonListo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListoActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonListo, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 270, 160, 40));

        jButtonCancelar1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jButtonCancelar1.setForeground(new java.awt.Color(51, 51, 51));
        jButtonCancelar1.setText("CANCELAR");
        jButtonCancelar1.setBorderPainted(false);
        jButtonCancelar1.setContentAreaFilled(false);
        jButtonCancelar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonCancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelar1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonCancelar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 200, 160, 60));

        jLabelPrecio2.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabelPrecio2.setForeground(new java.awt.Color(51, 51, 51));
        jLabelPrecio2.setText("FECHA:");
        getContentPane().add(jLabelPrecio2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 10, 100, -1));

        jButtonAtras1.setBackground(new java.awt.Color(153, 153, 0));
        jButtonAtras1.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jButtonAtras1.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAtras1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes1/atrasBlanco.png"))); // NOI18N
        jButtonAtras1.setBorderPainted(false);
        jButtonAtras1.setContentAreaFilled(false);
        jButtonAtras1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonAtras1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAtras1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonAtras1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 570, 100, 40));

        jButtonInicio.setBackground(new java.awt.Color(153, 0, 153));
        jButtonInicio.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jButtonInicio.setForeground(new java.awt.Color(255, 255, 255));
        jButtonInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes1/inicio.png"))); // NOI18N
        jButtonInicio.setBorderPainted(false);
        jButtonInicio.setContentAreaFilled(false);
        jButtonInicio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButtonInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInicioActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 10, -1, -1));

        jLabelLogo.setBackground(new java.awt.Color(255, 255, 255));
        jLabelLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes1/inventario bien.png"))); // NOI18N
        getContentPane().add(jLabelLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 370, -1, -1));

        jLabelFondo.setBackground(new java.awt.Color(0, 204, 204));
        jLabelFondo.setOpaque(true);
        getContentPane().add(jLabelFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void run(){
        Thread ct = Thread.currentThread();
        
        while(ct==h1){
            jLabelHora.setText(horaActual());
            horaActual();
            hora();
            try{
                Thread.sleep(1000);
            }catch(InterruptedException e){}
        }
    }
    
    public static String fecha(){
       Date fecha = new Date();
       SimpleDateFormat formatofecha = new SimpleDateFormat("YYYY/MM/dd");
       return formatofecha.format(fecha);
    }
    
    public static String fechaActual(){
       Date fecha = new Date();
       SimpleDateFormat formatofecha = new SimpleDateFormat("YYYY-MM-dd");
       return formatofecha.format(fecha);
    }
    
    public static String horaActual(){
       Date fecha = new Date();
       SimpleDateFormat formatofecha = new SimpleDateFormat("HH:mm");
       return formatofecha.format(fecha);
    }
    
    public static String hora(){
       Date fecha = new Date();
       SimpleDateFormat formatofecha = new SimpleDateFormat("HH");
       return formatofecha.format(fecha);
    }
    
    public static String minutos(){
       Date fecha = new Date();
       SimpleDateFormat formatofecha = new SimpleDateFormat("mm");
       return formatofecha.format(fecha);
    }
    
    void verificarVencimiento(){
        try {
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement();
            stmt.executeUpdate("UPDATE mensualidad SET activo = 'Vencido' WHERE vencimiento < '"+fechaActual()+"'");
        } catch (SQLException ex) {
            Logger.getLogger(ModificarPrecio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    void cargarMotos(){
        try {
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM mensualidad ORDER BY activo ASC");
            while(rs.next()){
                datos[0]= rs.getString(1);
                datos[1]= rs.getString(2);
                datos[2]= rs.getString(3);
                datos[3]= rs.getString(4);
                datos[4]= rs.getString(5);
                datos[5]= rs.getString(6);
                datos[6]= rs.getString(7);
                datos[7]= rs.getString(8);
                datos[8]= rs.getString(9);
                nFactura = rs.getString(1);
                
               
                modelo.addRow(datos);
                
            }
            TablaDatos.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(Conexion.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public LocalDate addDays(LocalDate startDate, int numDays) {
        return startDate.plusDays(numDays);
    }
    
    
    LocalDate fechaFin(int days){
        
        int year = Integer.parseInt(fecha().substring(0, 4));
        int month = Integer.parseInt(fecha().substring(5, 7));
        int day = Integer.parseInt(fecha().substring(8, 10));
 
        
        LocalDate startDate = LocalDate.of(year, month, day);
        int numDays = days;

        result = addDays(startDate, numDays);
        
        return result;
    }
    
    
    
    boolean verificarPlaca(){
        String validar = "No está";
        try {
            con = DriverManager.getConnection(url, user, clave);
            stmt = con.createStatement(); 
            ResultSet rs = stmt.executeQuery("SELECT * FROM cliente WHERE placa = '"+jTextFieldPlaca.getText()+"'");
            while(rs.next()){
                validar = rs.getString(2);
                documento = rs.getString(3);
                nombre = rs.getString(4);
                celular = rs.getString(5);


                modelo.addRow(datos);
            }
            TablaDatos.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(Conexion.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (validar.equals("No está")){
            return false;
        }else{
            return true;
        }
    }
    
    public class BillPrintable implements Printable {

        public int print(Graphics graphics, PageFormat pageFormat,int pageIndex) 
        throws PrinterException{    
      
            int result = NO_SUCH_PAGE;    
                if (pageIndex == 0) {                    
        
                    Graphics2D g2d = (Graphics2D) graphics;                    
                    double width = pageFormat.getImageableWidth();                               
                    g2d.translate((int) pageFormat.getImageableX(),(int) pageFormat.getImageableY()); 
                    //  FontMetrics metrics=g2d.getFontMetrics(new Font("Arial",Font.BOLD,7));       
                    try{
                        int y=20;
                        int yShift = 10;
                        int headerRectHeight=15;
                       // int headerRectHeighta=40;

                        g2d.setFont(new Font("Monospaced",Font.PLAIN,9));
                        g2d.drawString("-------------------------------------",12,y);y+=yShift;
                        g2d.drawString("  Parqueadero Sevilla los Naranjos   ",12,y);y+=yShift;
                        g2d.drawString("-------------------------------------",12,y);y+=headerRectHeight;
                        g2d.drawString("      Nit: 1036628813-1              ",12,y);y+=yShift;
                        g2d.drawString("      Dir: Calle 67 No, 51B - 22     ",12,y);y+=yShift;
                        g2d.drawString("      Tel: 5417739                   ",12,y);y+=yShift;
                        g2d.drawString("      Horario: Lu-Do 4:30am-11pm     ",12,y);y+=yShift;
                        g2d.drawString("      N. Factura: "+nFactura+"            ",12,y);y+=yShift;
                        g2d.drawString("-------------------------------------",12,y);y+=headerRectHeight;
                        g2d.setFont(new Font("Monospaced",Font.BOLD,14));
                        g2d.drawString("Placa:          "+jTextFieldPlaca.getText()+" ",10,y);y+=yShift;
                        g2d.drawString("                                      ",10,y);y+=yShift;
                        g2d.drawString("Total:          "+valorMes+" ",10,y);y+=yShift;
                        g2d.setFont(new Font("Monospaced",Font.PLAIN,9));
                        g2d.drawString("-------------------------------------",10,y);y+=yShift;
                        g2d.drawString(" Fecha:                  "+jLabelFecha.getText()+"   ",10,y);y+=yShift;
                        g2d.drawString("-------------------------------------",10,y);y+=yShift;
                        g2d.drawString("Le atendió:                          ",10,y);y+=yShift;
                        g2d.drawString("El parqueadero no se hace            ",10,y);y+=yShift;
                        g2d.drawString("responsable por:                     ",10,y);y+=yShift;
                        g2d.drawString("  -Hurto de accesorios o cascos      ",10,y);y+=yShift;
                        g2d.drawString("  dejados en la moto                 ",10,y);y+=yShift;
                        g2d.drawString("  -Daños o deterioro de la moto      ",10,y);y+=yShift;
                        g2d.drawString("  -Aquellos acontecimientos que      ",10,y);y+=yShift;
                        g2d.drawString("   impliquen fuerza mayor            ",10,y);y+=yShift;
                        g2d.drawString("   O caso fortuito                   ",10,y);y+=yShift;
                        g2d.drawString("*************************************",10,y);y+=yShift;
                        g2d.drawString("       GRACIAS VUELVA PRONTO         ",10,y);y+=yShift;
                        g2d.drawString("*************************************",10,y);y+=yShift;
                        g2d.drawString("     SOFTWARE BY:Anderson Medina     ",10,y);y+=yShift;
                        g2d.drawString(" CONTACTO:medinaanderson592@gmail.com",10,y);y+=yShift;       
                        g2d.drawString("                                     ",10,y);y+=yShift; 
           
                    }
                    catch(Exception e){
                        e.printStackTrace();
                    }

                    result = PAGE_EXISTS;    
                }    
            return result;    
        }
    }
    
    public class BillPrintableReturn implements Printable {

        public int print(Graphics graphics, PageFormat pageFormat,int pageIndex) 
        throws PrinterException{    
      
            int result = NO_SUCH_PAGE;    
                if (pageIndex == 0) {                    
        
                    Graphics2D g2d = (Graphics2D) graphics;                    
                    double width = pageFormat.getImageableWidth();                               
                    g2d.translate((int) pageFormat.getImageableX(),(int) pageFormat.getImageableY()); 
                    //  FontMetrics metrics=g2d.getFontMetrics(new Font("Arial",Font.BOLD,7));       
                    try{
                        int y=20;
                        int yShift = 10;
                        int headerRectHeight=15;
                       // int headerRectHeighta=40;

                        g2d.setFont(new Font("Monospaced",Font.PLAIN,9));
                        g2d.drawString("-------------------------------------",12,y);y+=yShift;
                        g2d.drawString("  Parqueadero Sevilla los Naranjos   ",12,y);y+=yShift;
                        g2d.drawString("-------------------------------------",12,y);y+=headerRectHeight;
                        g2d.drawString("      Nit: 1036628813-1              ",12,y);y+=yShift;
                        g2d.drawString("      Dir: Calle 67 No, 51B - 22     ",12,y);y+=yShift;
                        g2d.drawString("      Tel: 5417739                   ",12,y);y+=yShift;
                        g2d.drawString("      Horario: Lu-Do 4:30am-11pm     ",12,y);y+=yShift;
                        g2d.drawString("      N. Factura: "+nFactura+"            ",12,y);y+=yShift;
                        g2d.drawString("-------------------------------------",12,y);y+=headerRectHeight;
                        g2d.setFont(new Font("Monospaced",Font.BOLD,14));
                        g2d.drawString("Placa:          "+jTextFieldPlaca.getText()+" ",10,y);y+=yShift;
                        g2d.drawString("                                      ",10,y);y+=yShift;
                        g2d.drawString("Total:          "+valorQuincena+" ",10,y);y+=yShift;
                        g2d.setFont(new Font("Monospaced",Font.PLAIN,9));
                        g2d.drawString("-------------------------------------",10,y);y+=yShift;
                        g2d.drawString(" Fecha:                  "+jLabelFecha.getText()+"   ",10,y);y+=yShift;
                        g2d.drawString("-------------------------------------",10,y);y+=yShift;
                        g2d.drawString("Le atendió:                          ",10,y);y+=yShift;
                        g2d.drawString("El parqueadero no se hace            ",10,y);y+=yShift;
                        g2d.drawString("responsable por:                     ",10,y);y+=yShift;
                        g2d.drawString("  -Hurto de accesorios o cascos      ",10,y);y+=yShift;
                        g2d.drawString("  dejados en la moto                 ",10,y);y+=yShift;
                        g2d.drawString("  -Daños o deterioro de la moto      ",10,y);y+=yShift;
                        g2d.drawString("  -Aquellos acontecimientos que      ",10,y);y+=yShift;
                        g2d.drawString("   impliquen fuerza mayor            ",10,y);y+=yShift;
                        g2d.drawString("   O caso fortuito                   ",10,y);y+=yShift;
                        g2d.drawString("*************************************",10,y);y+=yShift;
                        g2d.drawString("       GRACIAS VUELVA PRONTO         ",10,y);y+=yShift;
                        g2d.drawString("*************************************",10,y);y+=yShift;
                        g2d.drawString("     SOFTWARE BY:Anderson Medina     ",10,y);y+=yShift;
                        g2d.drawString(" CONTACTO:medinaanderson592@gmail.com",10,y);y+=yShift;       
                        g2d.drawString("                                     ",10,y);y+=yShift; 
           
                    }
                    catch(Exception e){
                        e.printStackTrace();
                    }

                    result = PAGE_EXISTS;    
                }    
            return result;    
        }
    }

     public PageFormat getPageFormat(PrinterJob pj){
    
        PageFormat pf = pj.defaultPage();
        Paper paper = pf.getPaper();    
        double bHeight;

        double bodyHeight = 3.0;  
        double headerHeight = 5.0;                  
        double footerHeight = 5.0;        
        double width = cm_to_pp(8); 
        double height = cm_to_pp(headerHeight+bodyHeight+footerHeight); 
        paper.setSize(width, height);
        paper.setImageableArea(0,10,width,height - cm_to_pp(1));  

        pf.setOrientation(PageFormat.PORTRAIT);  
        pf.setPaper(paper);    

        return pf;
    }
    protected static double cm_to_pp(double cm){           
	return toPPI(cm * 0.393600787);            
    }
 
    protected static double toPPI(double inch){            
        return inch * 72d;            
    }
    
    private void jButtonListoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListoActionPerformed
                   
        if(jTextFieldPlaca.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "No ingresó la placa");
        }else{
            
            if(verificarPlaca()){

                try {
                    con = DriverManager.getConnection(url, user, clave);
                    stmt = con.createStatement();
                    ResultSet rs = stmt.executeQuery("SELECT * FROM precio WHERE id = '1'");
                    while(rs.next()){
                        valorMes = Integer.parseInt(rs.getString(5));
                        valorQuincena = Integer.parseInt(rs.getString(4));
                        modelo.addRow(datos);
                    }
                    TablaDatos.setModel(modelo);
                } catch (SQLException ex) {
                    Logger.getLogger(Conexion.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                if(jComboBoxUnidad.getSelectedItem().toString().equals("mes")){
                    JOptionPane.showMessageDialog(null, "El valor a a pagar es: " + valorMes);
                    try {
                        con = DriverManager.getConnection(url, user, clave);
                        stmt = con.createStatement();
                        stmt.executeUpdate("INSERT INTO mensualidad VALUES('0' , "
                        + "'"+documento+"' , "
                        + "'"+nombre+"' , "
                        + "'"+celular+"' ,"
                        + "'"+jTextFieldPlaca.getText()+"' ,"
                        + "'"+fecha()+"' ,"
                        + "'"+fechaFin(30)+"' ,"
                        + "'Mensualidad' ,"
                        + "'Activo' ,"
                        + "'"+valorMes+"')");
                    } catch (SQLException ex) {
                        Logger.getLogger(RegistrarMensualidad.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    int imprimir = JOptionPane.showConfirmDialog(null, "Desea imprimir el recibo",
                    "YES_NO_OPTION", JOptionPane.YES_NO_OPTION,
                    JOptionPane.INFORMATION_MESSAGE);
    
                    if(imprimir == 0){
                        PrinterJob pj = PrinterJob.getPrinterJob();        
                        pj.setPrintable(new BillPrintable(),getPageFormat(pj));
                        try {
                            pj.print();
                        }
                        catch (PrinterException ex) {
                            ex.printStackTrace();
                        }
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "El valor a a pagar es: " + valorQuincena);
                    try {
                        con = DriverManager.getConnection(url, user, clave);
                        stmt = con.createStatement();
                        stmt.executeUpdate("INSERT INTO mensualidad VALUES('0' , "
                        + "'"+documento+"' , "
                        + "'"+nombre+"' , "
                        + "'"+celular+"' ,"
                        + "'"+jTextFieldPlaca.getText()+"' ,"
                        + "'"+fecha()+"' ,"
                        + "'"+fechaFin(15)+"' ,"
                        + "'Quincena' ,"
                        + "'Activo' ,"
                        + "'"+valorQuincena+"')");
                    } catch (SQLException ex) {
                        Logger.getLogger(RegistrarMensualidad.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                    int imprimir = JOptionPane.showConfirmDialog(null, "Desea imprimir el recibo",
                    "YES_NO_OPTION", JOptionPane.YES_NO_OPTION,
                    JOptionPane.INFORMATION_MESSAGE);
    
                    if(imprimir == 0){
                        PrinterJob pj = PrinterJob.getPrinterJob();        
                        pj.setPrintable(new BillPrintableReturn(),getPageFormat(pj));
                        try {
                            pj.print();
                        }
                        catch (PrinterException ex) {
                            ex.printStackTrace();
                        }
                    }
                }
                
                
                
            }else{
                    
                JOptionPane.showMessageDialog(null, "El cliente no está registrado");
            }
            
            
            
            modelo.setRowCount(0);
            cargarMotos();

            jTextFieldPlaca.setText("");
            

        }
    }//GEN-LAST:event_jButtonListoActionPerformed

    private void jButtonCancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelar1ActionPerformed
                 
            jTextFieldPlaca.setText("");
    }//GEN-LAST:event_jButtonCancelar1ActionPerformed

    private void jButtonAtras1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAtras1ActionPerformed
        MensualidadMenu I = new MensualidadMenu();
        I.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonAtras1ActionPerformed

    private void jButtonInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInicioActionPerformed
        InicioParqueadero I = new InicioParqueadero();
        I.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonInicioActionPerformed

    private void TablaDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaDatosMouseClicked
        int seleccionar = TablaDatos.rowAtPoint(evt.getPoint());
        jLabelId.setText(String.valueOf(TablaDatos.getValueAt(seleccionar, 0)));
    }//GEN-LAST:event_TablaDatosMouseClicked

    private void jTextFieldPlacaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPlacaActionPerformed
        jButtonListo.doClick();
    }//GEN-LAST:event_jTextFieldPlacaActionPerformed

    private void jTextFieldPlacaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPlacaKeyTyped
        char c= evt.getKeyChar();
        if(Character.isLowerCase(c)){
            String cad=(""+c).toUpperCase();
            c= cad.charAt(0);
            evt.setKeyChar(c);
        }
    }//GEN-LAST:event_jTextFieldPlacaKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarMensualidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarMensualidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarMensualidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarMensualidad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrarMensualidad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MostrarCodigo1;
    public javax.swing.JTable TablaDatos;
    public javax.swing.JButton jButtonAtras1;
    public javax.swing.JButton jButtonCancelar1;
    private javax.swing.JButton jButtonInicio;
    private javax.swing.JButton jButtonListo;
    private javax.swing.JComboBox<String> jComboBoxUnidad;
    private javax.swing.JLabel jLabelFecha;
    private javax.swing.JLabel jLabelFondo;
    private javax.swing.JLabel jLabelHora;
    private javax.swing.JLabel jLabelId;
    private javax.swing.JLabel jLabelLogo;
    private javax.swing.JLabel jLabelPrecio2;
    private javax.swing.JLabel jLabelPrecio3;
    private javax.swing.JLabel jLabelPrecio4;
    private javax.swing.JLabel jLabelPrecio5;
    private javax.swing.JScrollPane jScrollPaneProducto;
    public javax.swing.JTextField jTextFieldPlaca;
    // End of variables declaration//GEN-END:variables
}
